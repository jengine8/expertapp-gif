{"version":3,"sources":["componets/GifGridItem.js","componets/GifGrid.js","componets/TypeCategorie.js","componets/GifApp.js","index.js"],"names":["GifGridItem","title","url","className","src","alt","GifGrid","category","useState","images","setImages","useEffect","getGif","a","encodeURI","fetch","resp","json","data","gifts","map","img","id","downsized_medium","TypeCategorie","setCat","text","setText","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","GifApp","categories","setCategories","cat","ReactDOM","render","document","getElementById"],"mappings":"2NAGcA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAIlC,OAEI,sBAAKC,UAAU,OAAf,UAEI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,QCPHK,EAAU,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAErB,EAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAENC,MAEF,CAACL,IAGC,IAAMK,EAAM,uCAAE,oCAAAC,EAAA,6DACJX,EADI,0FACmFY,UAAUP,GAD7F,sBAEOQ,MAAMb,GAFb,cAEJc,EAFI,gBAGWA,EAAKC,OAHhB,gBAGHC,EAHG,EAGHA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRrB,MAAMoB,EAAIpB,MACVC,IAAG,UAACmB,EAAIZ,cAAL,aAAC,EAAYc,iBAAiBrB,QAI3CQ,EAAUS,GAbE,4CAAF,qDAsBhB,OACI,gCACI,6BAAKZ,IACL,oBAAIJ,UAAU,aAAd,SAEQM,EAAOW,KAAI,SAACC,GACP,OAAQ,cAAC,EAAD,eAEHA,GADAA,EAAIC,a,OCJnBE,EArCM,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEnB,EAAuBjB,mBAAS,IAAhC,mBAAOkB,EAAP,KAAaC,EAAb,KAmBD,OAAQ,sBAAMC,SAZI,SAACC,GACdA,EAAEC,iBAECJ,EAAKK,OAAOC,OAAO,IAClBP,GAAO,SAAAQ,GAAU,OAAGP,GAAH,mBAAYO,OAC7BN,EAAQ,MAOT,SAEH,uBAAOO,KAAK,OACZC,MAAOT,EACPU,SArBqB,SAACP,GACtBF,EAAQE,EAAEQ,OAAOF,aCyBVG,EA5BD,WAEV,MAAmC9B,mBAAS,CAAC,YAA7C,mBAAO+B,EAAP,KAAmBC,EAAnB,KAIA,OACI,gCACI,cAAC,EAAD,CAAef,OAAQe,IACvB,6CACA,uBAEA,6BAEWD,EAAWnB,KAAI,SAAAqB,GAEV,OAAQ,cAAC,EAAD,CAERlC,SAAUkC,GADLA,Y,MClBjCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50a7debb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n export const GifGridItem = ({ title, url})=>{\r\n\r\n    \r\n\r\n    return  (\r\n       \r\n        <div className=\"card\">\r\n\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n    \r\n\r\n }","import React, { useEffect, useState } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid=  ({category})=>{\r\n\r\n    const [images, setImages]= useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        getGif();\r\n\r\n    },[category]);\r\n\r\n\r\n        const getGif= async ()=>{\r\n            const url=`https://api.giphy.com/v1/gifs/search?api_key=opwyhBxH4Stpdy089502Au9jKo4AnkMN&q=${encodeURI(category)}&limit=10`;\r\n            const resp=await fetch(url);\r\n            const {data}=  await resp.json();\r\n\r\n            const gifts= data.map(img =>{\r\n                return{\r\n                    id: img.id,\r\n                    title:img.title,\r\n                    url:img.images?.downsized_medium.url\r\n                }\r\n            })\r\n\r\n          setImages(gifts);\r\n\r\n        \r\n\r\n        }\r\n\r\n        \r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h3>{category}</h3>\r\n            <ol className=\"contenedor\">\r\n                {\r\n                    images.map((img)=>{\r\n                         return  <GifGridItem\r\n                         key={img.id}\r\n                          {...img}/> \r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst TypeCategorie= ({setCat})=>{\r\n\r\n    const [text, setText]= useState(\"\");\r\n\r\n    const handleInputChange= (e)=>{\r\n        setText(e.target.value);\r\n\r\n    }\r\n\r\n    const formSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(text.trim().length>2){\r\n            setCat(categorias=>[text, ...categorias]);\r\n            setText('');\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n\r\n   return( <form onSubmit={formSubmit}>\r\n       \r\n        <input type=\"text\"\r\n        value={text}\r\n        onChange={handleInputChange}\r\n        />\r\n    </form>\r\n   )\r\n\r\n};\r\n\r\nTypeCategorie.propTypes={\r\n    setCat: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default TypeCategorie;\r\n\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { GifGrid } from \"./GifGrid\";\r\nimport TypeCategorie from \"./TypeCategorie\";\r\n\r\n\r\nconst GifApp= () =>{\r\n\r\n    const [categories, setCategories]= useState(['Pokemon']);\r\n\r\n   \r\n\r\n    return(\r\n        <div>\r\n            <TypeCategorie setCat={setCategories}/>\r\n            <h2>Giff-Expert</h2>\r\n            <hr/>\r\n\r\n            <ol>\r\n                   {\r\n                       categories.map(cat =>{\r\n\r\n                            return  <GifGrid \r\n                            key={cat}\r\n                            category={cat}/> \r\n\r\n                       })\r\n                   }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default GifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifApp from \"./componets/GifApp\";\nimport './index.css';\n\nReactDOM.render(\n  <GifApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}